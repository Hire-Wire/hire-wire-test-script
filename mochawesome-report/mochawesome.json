{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 0,
    "pending": 0,
    "failures": 5,
    "start": "2024-11-19T22:25:01.766Z",
    "end": "2024-11-19T22:25:12.119Z",
    "duration": 10353,
    "testsRegistered": 5,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "08882acf-f74c-4b3a-b211-ae310e541b3b",
      "title": "",
      "fullFile": "C:\\Users\\talla\\OneDrive\\Desktop\\Laxmi\\MEng\\ENSF608\\hire-wire-test-script\\test\\delete_experience_test.js",
      "file": "\\test\\delete_experience_test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d13c2809-2b0f-4b2d-8190-016ec6c36add",
          "title": "Delete Experience from User Profile Functionality Test",
          "fullFile": "C:\\Users\\talla\\OneDrive\\Desktop\\Laxmi\\MEng\\ENSF608\\hire-wire-test-script\\test\\delete_experience_test.js",
          "file": "\\test\\delete_experience_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Delete Experience from User Profile Functionality Test\"",
              "fullTitle": "Delete Experience from User Profile Functionality Test \"before all\" hook in \"Delete Experience from User Profile Functionality Test\"",
              "timedOut": false,
              "duration": 1081,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    driver = await new Builder().forBrowser('chrome').build();\n} catch (error) {\n    console.error('Error initializing WebDriver:', error);\n}",
              "err": {},
              "uuid": "efa8a276-4a08-4c40-ba58-2159ddf900b2",
              "parentUUID": "d13c2809-2b0f-4b2d-8190-016ec6c36add",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Delete Experience from User Profile Functionality Test\"",
              "fullTitle": "Delete Experience from User Profile Functionality Test \"after all\" hook in \"Delete Experience from User Profile Functionality Test\"",
              "timedOut": false,
              "duration": 89,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    await driver.quit();\n} catch (error) {\n    console.error('Error quitting the WebDriver:', error);\n}",
              "err": {},
              "uuid": "2d3adabe-7fd3-4f26-954d-6d4905e76b23",
              "parentUUID": "d13c2809-2b0f-4b2d-8190-016ec6c36add",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Delete Experience from User Profile Functionality Test\"",
              "fullTitle": "Delete Experience from User Profile Functionality Test \"after each\" hook in \"Delete Experience from User Profile Functionality Test\"",
              "timedOut": false,
              "duration": 76,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await logoutIfLoggedIn();",
              "err": {},
              "uuid": "ac1d7f66-ca9f-4bc4-9f05-c75548612d13",
              "parentUUID": "d13c2809-2b0f-4b2d-8190-016ec6c36add",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Test case  1",
              "fullTitle": "Delete Experience from User Profile Functionality Test Test case  1",
              "timedOut": false,
              "duration": 3061,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Step 1: Ensure the user is logged out if already logged in\nawait logoutIfLoggedIn();\nawait navigateToLoginPage();\n// Step 2: Log in using valid credentials from the Profile.json file\nconst loginBtn = await driver.findElement(By.className('login-button'));\nawait loginBtn.click();\nawait driver.sleep(100);\nawait driver.findElement(By.xpath('//input[@placeholder=\"Email\"]')).sendKeys(user.emailAddress);\nawait driver.findElement(By.xpath('//input[@placeholder=\"Password\"]')).sendKeys(user.password);\nconst submitButton = await driver.findElement(By.xpath('//button[@type=\"submit\"]'));\nawait submitButton.click();\nawait driver.sleep(500);\n// Step 3: Verify that the user is redirected to the dashboard after login\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, DASHBOARD_URL, `User cannot add their job experience because they cannot log in with these credentials.`);\n    \n// Step 4: Navigate to the experience page\nawait navigateToExperiencePage();\n\ntry {\n    // Step 5: Attempt to delete a job experience by clicking the delete button\n    const deleteButton = await driver.findElement(By.xpath('//button[contains(@class, \"remove-button\") and @type=\"button\"]'));\n    assert.strict(deleteButton, 'There is no experience to delete');\n    \n    //  step 6. Verify that the experience is present to delete.\n    await deleteButton.click();\n    await driver.sleep(100);\n} catch (error) {\n    // Handle case where delete button is not found\n    assert.fail('There is no experience to delete');\n}",
              "err": {
                "message": "AssertionError: There is no experience to delete",
                "estack": "AssertionError [ERR_ASSERTION]: There is no experience to delete\n    at Context.<anonymous> (test\\delete_experience_test.js:145:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": null
              },
              "uuid": "ae365c8a-23c5-47e1-9a99-6c272f5826b0",
              "parentUUID": "d13c2809-2b0f-4b2d-8190-016ec6c36add",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test case  2",
              "fullTitle": "Delete Experience from User Profile Functionality Test Test case  2",
              "timedOut": false,
              "duration": 611,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Step 1: Ensure the user is logged out if already logged in\nawait logoutIfLoggedIn();\nawait navigateToLoginPage();\n// Step 2: Log in using valid credentials from the Profile.json file\nconst loginBtn = await driver.findElement(By.className('login-button'));\nawait loginBtn.click();\nawait driver.sleep(100);\nawait driver.findElement(By.xpath('//input[@placeholder=\"Email\"]')).sendKeys(user.emailAddress);\nawait driver.findElement(By.xpath('//input[@placeholder=\"Password\"]')).sendKeys(user.password);\nconst submitButton = await driver.findElement(By.xpath('//button[@type=\"submit\"]'));\nawait submitButton.click();\nawait driver.sleep(500);\n// Step 3: Verify that the user is redirected to the dashboard after login\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, DASHBOARD_URL, `User cannot add their job experience because they cannot log in with these credentials.`);\n    \n// Step 4: Navigate to the experience page\nawait navigateToExperiencePage();\n\ntry {\n    // Step 5: Attempt to delete a job experience by clicking the delete button\n    const deleteButton = await driver.findElement(By.xpath('//button[contains(@class, \"remove-button\") and @type=\"button\"]'));\n    assert.strict(deleteButton, 'There is no experience to delete');\n    \n    //  step 6. Verify that the experience is present to delete.\n    await deleteButton.click();\n    await driver.sleep(100);\n} catch (error) {\n    // Handle case where delete button is not found\n    assert.fail('There is no experience to delete');\n}",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@placeholder=\"Email\"]\"}\n  (Session info: chrome=131.0.6778.70)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@placeholder=\"Email\"]\"}\n  (Session info: chrome=131.0.6778.70)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:521:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:514:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:446:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:744:17)\n    at async toWireValue (node_modules\\selenium-webdriver\\lib\\webdriver.js:148:15)\n    at async C:\\Users\\talla\\OneDrive\\Desktop\\Laxmi\\MEng\\ENSF608\\hire-wire-test-script\\node_modules\\selenium-webdriver\\lib\\webdriver.js:194:16\n    at async forEachKey (node_modules\\selenium-webdriver\\lib\\webdriver.js:188:9)\n    at async convertKeys (node_modules\\selenium-webdriver\\lib\\webdriver.js:193:3)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:742:22)\n    at async Context.<anonymous> (test\\delete_experience_test.js:121:13)",
                "diff": null
              },
              "uuid": "7473489a-2995-4606-a14e-5bac2c122e5b",
              "parentUUID": "d13c2809-2b0f-4b2d-8190-016ec6c36add",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test case  3",
              "fullTitle": "Delete Experience from User Profile Functionality Test Test case  3",
              "timedOut": false,
              "duration": 1613,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Step 1: Ensure the user is logged out if already logged in\nawait logoutIfLoggedIn();\nawait navigateToLoginPage();\n// Step 2: Log in using valid credentials from the Profile.json file\nconst loginBtn = await driver.findElement(By.className('login-button'));\nawait loginBtn.click();\nawait driver.sleep(100);\nawait driver.findElement(By.xpath('//input[@placeholder=\"Email\"]')).sendKeys(user.emailAddress);\nawait driver.findElement(By.xpath('//input[@placeholder=\"Password\"]')).sendKeys(user.password);\nconst submitButton = await driver.findElement(By.xpath('//button[@type=\"submit\"]'));\nawait submitButton.click();\nawait driver.sleep(500);\n// Step 3: Verify that the user is redirected to the dashboard after login\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, DASHBOARD_URL, `User cannot add their job experience because they cannot log in with these credentials.`);\n    \n// Step 4: Navigate to the experience page\nawait navigateToExperiencePage();\n\ntry {\n    // Step 5: Attempt to delete a job experience by clicking the delete button\n    const deleteButton = await driver.findElement(By.xpath('//button[contains(@class, \"remove-button\") and @type=\"button\"]'));\n    assert.strict(deleteButton, 'There is no experience to delete');\n    \n    //  step 6. Verify that the experience is present to delete.\n    await deleteButton.click();\n    await driver.sleep(100);\n} catch (error) {\n    // Handle case where delete button is not found\n    assert.fail('There is no experience to delete');\n}",
              "err": {
                "message": "AssertionError: There is no experience to delete",
                "estack": "AssertionError [ERR_ASSERTION]: There is no experience to delete\n    at Context.<anonymous> (test\\delete_experience_test.js:145:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": null
              },
              "uuid": "f6059eec-8bf7-4be4-8b76-4f4e4d868ee1",
              "parentUUID": "d13c2809-2b0f-4b2d-8190-016ec6c36add",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test case  4",
              "fullTitle": "Delete Experience from User Profile Functionality Test Test case  4",
              "timedOut": false,
              "duration": 1698,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Step 1: Ensure the user is logged out if already logged in\nawait logoutIfLoggedIn();\nawait navigateToLoginPage();\n// Step 2: Log in using valid credentials from the Profile.json file\nconst loginBtn = await driver.findElement(By.className('login-button'));\nawait loginBtn.click();\nawait driver.sleep(100);\nawait driver.findElement(By.xpath('//input[@placeholder=\"Email\"]')).sendKeys(user.emailAddress);\nawait driver.findElement(By.xpath('//input[@placeholder=\"Password\"]')).sendKeys(user.password);\nconst submitButton = await driver.findElement(By.xpath('//button[@type=\"submit\"]'));\nawait submitButton.click();\nawait driver.sleep(500);\n// Step 3: Verify that the user is redirected to the dashboard after login\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, DASHBOARD_URL, `User cannot add their job experience because they cannot log in with these credentials.`);\n    \n// Step 4: Navigate to the experience page\nawait navigateToExperiencePage();\n\ntry {\n    // Step 5: Attempt to delete a job experience by clicking the delete button\n    const deleteButton = await driver.findElement(By.xpath('//button[contains(@class, \"remove-button\") and @type=\"button\"]'));\n    assert.strict(deleteButton, 'There is no experience to delete');\n    \n    //  step 6. Verify that the experience is present to delete.\n    await deleteButton.click();\n    await driver.sleep(100);\n} catch (error) {\n    // Handle case where delete button is not found\n    assert.fail('There is no experience to delete');\n}",
              "err": {
                "message": "AssertionError: There is no experience to delete",
                "estack": "AssertionError [ERR_ASSERTION]: There is no experience to delete\n    at Context.<anonymous> (test\\delete_experience_test.js:145:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": null
              },
              "uuid": "d4a45b05-15df-43cb-887b-08127c34c843",
              "parentUUID": "d13c2809-2b0f-4b2d-8190-016ec6c36add",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test case  5",
              "fullTitle": "Delete Experience from User Profile Functionality Test Test case  5",
              "timedOut": false,
              "duration": 1764,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Step 1: Ensure the user is logged out if already logged in\nawait logoutIfLoggedIn();\nawait navigateToLoginPage();\n// Step 2: Log in using valid credentials from the Profile.json file\nconst loginBtn = await driver.findElement(By.className('login-button'));\nawait loginBtn.click();\nawait driver.sleep(100);\nawait driver.findElement(By.xpath('//input[@placeholder=\"Email\"]')).sendKeys(user.emailAddress);\nawait driver.findElement(By.xpath('//input[@placeholder=\"Password\"]')).sendKeys(user.password);\nconst submitButton = await driver.findElement(By.xpath('//button[@type=\"submit\"]'));\nawait submitButton.click();\nawait driver.sleep(500);\n// Step 3: Verify that the user is redirected to the dashboard after login\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, DASHBOARD_URL, `User cannot add their job experience because they cannot log in with these credentials.`);\n    \n// Step 4: Navigate to the experience page\nawait navigateToExperiencePage();\n\ntry {\n    // Step 5: Attempt to delete a job experience by clicking the delete button\n    const deleteButton = await driver.findElement(By.xpath('//button[contains(@class, \"remove-button\") and @type=\"button\"]'));\n    assert.strict(deleteButton, 'There is no experience to delete');\n    \n    //  step 6. Verify that the experience is present to delete.\n    await deleteButton.click();\n    await driver.sleep(100);\n} catch (error) {\n    // Handle case where delete button is not found\n    assert.fail('There is no experience to delete');\n}",
              "err": {
                "message": "AssertionError: There is no experience to delete",
                "estack": "AssertionError [ERR_ASSERTION]: There is no experience to delete\n    at Context.<anonymous> (test\\delete_experience_test.js:145:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": null
              },
              "uuid": "96b8720a-91ca-44c3-b2fd-ca90baa657e3",
              "parentUUID": "d13c2809-2b0f-4b2d-8190-016ec6c36add",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ae365c8a-23c5-47e1-9a99-6c272f5826b0",
            "7473489a-2995-4606-a14e-5bac2c122e5b",
            "f6059eec-8bf7-4be4-8b76-4f4e4d868ee1",
            "d4a45b05-15df-43cb-887b-08127c34c843",
            "96b8720a-91ca-44c3-b2fd-ca90baa657e3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8747,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}