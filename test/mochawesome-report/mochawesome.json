{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-20T21:03:48.557Z",
    "end": "2024-11-20T21:04:38.697Z",
    "duration": 50140,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fc84b4c9-8696-4c79-a18b-5d986981e9d4",
      "title": "",
      "fullFile": "C:\\Users\\talla\\OneDrive\\Desktop\\Laxmi\\MEng\\ENSF608\\hire-wire-test-script\\test\\user_registration_test.js",
      "file": "\\user_registration_test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "07ff9a83-4980-41c3-aa5d-6f3d21116298",
          "title": "User Registration Functionality Test",
          "fullFile": "C:\\Users\\talla\\OneDrive\\Desktop\\Laxmi\\MEng\\ENSF608\\hire-wire-test-script\\test\\user_registration_test.js",
          "file": "\\user_registration_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"User Registration Functionality Test\"",
              "fullTitle": "User Registration Functionality Test \"before all\" hook in \"User Registration Functionality Test\"",
              "timedOut": false,
              "duration": 926,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();",
              "err": {},
              "uuid": "1ffdc331-9c61-4773-97a9-f742e4e71334",
              "parentUUID": "07ff9a83-4980-41c3-aa5d-6f3d21116298",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"User Registration Functionality Test\"",
              "fullTitle": "User Registration Functionality Test \"after all\" hook in \"User Registration Functionality Test\"",
              "timedOut": false,
              "duration": 33,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "4c94f4b0-9ea5-4bf4-934c-f22182961f2d",
              "parentUUID": "07ff9a83-4980-41c3-aa5d-6f3d21116298",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"User Registration Functionality Test\"",
              "fullTitle": "User Registration Functionality Test \"after each\" hook in \"User Registration Functionality Test\"",
              "timedOut": false,
              "duration": 5069,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await logoutIfLoggedIn();",
              "err": {},
              "uuid": "47bae267-a4e4-4cdb-b094-8b5a47196546",
              "parentUUID": "07ff9a83-4980-41c3-aa5d-6f3d21116298",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Test Case 1:",
              "fullTitle": "User Registration Functionality Test Test Case 1:",
              "timedOut": false,
              "duration": 3233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: Navigate to the registration page\nawait navigateToRegistrationPage();\nconsole.log(\"Email:\", user.emailAddress);\nconsole.log(\"First Name:\", user.firstName);\n// Step 2: Fill in the registration form with user credentials\nawait driver.findElement(By.css('input[placeholder=\"First Name\"]')).sendKeys(user.firstName);\nawait driver.findElement(By.css('input[placeholder=\"Last Name\"]')).sendKeys(user.lastName);\nawait driver.findElement(By.css('input[placeholder=\"Email\"]')).sendKeys(user.emailAddress);\nawait driver.findElement(By.css('input[placeholder=\"Password\"]')).sendKeys(user.password);\nawait driver.findElement(By.css('input[placeholder=\"Re-enter Password\"]')).sendKeys(user.confirmPassword);\n// Step 3: Submit the registration form\nconst registerButton = await driver.findElement(By.css('button[type=\"submit\"]'));\nawait registerButton.click();\nawait driver.sleep(1000);\n// Step 4: Verify the user is redirected to the user profile page\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, DASHBOARD_URL, \"After successful registration, the user should be redirected to the user profile page.\");",
              "err": {},
              "uuid": "84fdde55-fe20-431f-908c-25313d5981c6",
              "parentUUID": "07ff9a83-4980-41c3-aa5d-6f3d21116298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 2:",
              "fullTitle": "User Registration Functionality Test Test Case 2:",
              "timedOut": false,
              "duration": 1670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: Navigate to the registration page\nawait navigateToRegistrationPage();\nconsole.log(\"Email:\", user.emailAddress);\nconsole.log(\"First Name:\", user.firstName);\n// Step 2: Fill in the registration form with user credentials\nawait driver.findElement(By.css('input[placeholder=\"First Name\"]')).sendKeys(user.firstName);\nawait driver.findElement(By.css('input[placeholder=\"Last Name\"]')).sendKeys(user.lastName);\nawait driver.findElement(By.css('input[placeholder=\"Email\"]')).sendKeys(user.emailAddress);\nawait driver.findElement(By.css('input[placeholder=\"Password\"]')).sendKeys(user.password);\nawait driver.findElement(By.css('input[placeholder=\"Re-enter Password\"]')).sendKeys(user.confirmPassword);\n// Step 3: Submit the registration form\nconst registerButton = await driver.findElement(By.css('button[type=\"submit\"]'));\nawait registerButton.click();\nawait driver.sleep(1000);\n// Step 4: Verify the user is redirected to the user profile page\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, DASHBOARD_URL, \"After successful registration, the user should be redirected to the user profile page.\");",
              "err": {},
              "uuid": "013bf498-b972-42c3-baff-190b95f595ec",
              "parentUUID": "07ff9a83-4980-41c3-aa5d-6f3d21116298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 3:",
              "fullTitle": "User Registration Functionality Test Test Case 3:",
              "timedOut": false,
              "duration": 1684,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: Navigate to the registration page\nawait navigateToRegistrationPage();\nconsole.log(\"Email:\", user.emailAddress);\nconsole.log(\"First Name:\", user.firstName);\n// Step 2: Fill in the registration form with user credentials\nawait driver.findElement(By.css('input[placeholder=\"First Name\"]')).sendKeys(user.firstName);\nawait driver.findElement(By.css('input[placeholder=\"Last Name\"]')).sendKeys(user.lastName);\nawait driver.findElement(By.css('input[placeholder=\"Email\"]')).sendKeys(user.emailAddress);\nawait driver.findElement(By.css('input[placeholder=\"Password\"]')).sendKeys(user.password);\nawait driver.findElement(By.css('input[placeholder=\"Re-enter Password\"]')).sendKeys(user.confirmPassword);\n// Step 3: Submit the registration form\nconst registerButton = await driver.findElement(By.css('button[type=\"submit\"]'));\nawait registerButton.click();\nawait driver.sleep(1000);\n// Step 4: Verify the user is redirected to the user profile page\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, DASHBOARD_URL, \"After successful registration, the user should be redirected to the user profile page.\");",
              "err": {},
              "uuid": "3095e7bb-c1d0-41d7-89fc-da94813da7df",
              "parentUUID": "07ff9a83-4980-41c3-aa5d-6f3d21116298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 4:",
              "fullTitle": "User Registration Functionality Test Test Case 4:",
              "timedOut": false,
              "duration": 1693,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: Navigate to the registration page\nawait navigateToRegistrationPage();\nconsole.log(\"Email:\", user.emailAddress);\nconsole.log(\"First Name:\", user.firstName);\n// Step 2: Fill in the registration form with user credentials\nawait driver.findElement(By.css('input[placeholder=\"First Name\"]')).sendKeys(user.firstName);\nawait driver.findElement(By.css('input[placeholder=\"Last Name\"]')).sendKeys(user.lastName);\nawait driver.findElement(By.css('input[placeholder=\"Email\"]')).sendKeys(user.emailAddress);\nawait driver.findElement(By.css('input[placeholder=\"Password\"]')).sendKeys(user.password);\nawait driver.findElement(By.css('input[placeholder=\"Re-enter Password\"]')).sendKeys(user.confirmPassword);\n// Step 3: Submit the registration form\nconst registerButton = await driver.findElement(By.css('button[type=\"submit\"]'));\nawait registerButton.click();\nawait driver.sleep(1000);\n// Step 4: Verify the user is redirected to the user profile page\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, DASHBOARD_URL, \"After successful registration, the user should be redirected to the user profile page.\");",
              "err": {},
              "uuid": "b4b516bb-e7de-4d92-bd3a-12dedee65f54",
              "parentUUID": "07ff9a83-4980-41c3-aa5d-6f3d21116298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 5:",
              "fullTitle": "User Registration Functionality Test Test Case 5:",
              "timedOut": false,
              "duration": 1686,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: Navigate to the registration page\nawait navigateToRegistrationPage();\nconsole.log(\"Email:\", user.emailAddress);\nconsole.log(\"First Name:\", user.firstName);\n// Step 2: Fill in the registration form with user credentials\nawait driver.findElement(By.css('input[placeholder=\"First Name\"]')).sendKeys(user.firstName);\nawait driver.findElement(By.css('input[placeholder=\"Last Name\"]')).sendKeys(user.lastName);\nawait driver.findElement(By.css('input[placeholder=\"Email\"]')).sendKeys(user.emailAddress);\nawait driver.findElement(By.css('input[placeholder=\"Password\"]')).sendKeys(user.password);\nawait driver.findElement(By.css('input[placeholder=\"Re-enter Password\"]')).sendKeys(user.confirmPassword);\n// Step 3: Submit the registration form\nconst registerButton = await driver.findElement(By.css('button[type=\"submit\"]'));\nawait registerButton.click();\nawait driver.sleep(1000);\n// Step 4: Verify the user is redirected to the user profile page\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, DASHBOARD_URL, \"After successful registration, the user should be redirected to the user profile page.\");",
              "err": {},
              "uuid": "01ef1799-e5ba-47ea-ae63-bae827f90423",
              "parentUUID": "07ff9a83-4980-41c3-aa5d-6f3d21116298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 6:",
              "fullTitle": "User Registration Functionality Test Test Case 6:",
              "timedOut": false,
              "duration": 1686,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: Navigate to the registration page\nawait navigateToRegistrationPage();\nconsole.log(\"Email:\", user.emailAddress);\nconsole.log(\"First Name:\", user.firstName);\n// Step 2: Fill in the registration form with user credentials\nawait driver.findElement(By.css('input[placeholder=\"First Name\"]')).sendKeys(user.firstName);\nawait driver.findElement(By.css('input[placeholder=\"Last Name\"]')).sendKeys(user.lastName);\nawait driver.findElement(By.css('input[placeholder=\"Email\"]')).sendKeys(user.emailAddress);\nawait driver.findElement(By.css('input[placeholder=\"Password\"]')).sendKeys(user.password);\nawait driver.findElement(By.css('input[placeholder=\"Re-enter Password\"]')).sendKeys(user.confirmPassword);\n// Step 3: Submit the registration form\nconst registerButton = await driver.findElement(By.css('button[type=\"submit\"]'));\nawait registerButton.click();\nawait driver.sleep(1000);\n// Step 4: Verify the user is redirected to the user profile page\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, DASHBOARD_URL, \"After successful registration, the user should be redirected to the user profile page.\");",
              "err": {},
              "uuid": "4517fdc9-d8c0-46f8-a4ff-0cccf83532c6",
              "parentUUID": "07ff9a83-4980-41c3-aa5d-6f3d21116298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 7:",
              "fullTitle": "User Registration Functionality Test Test Case 7:",
              "timedOut": false,
              "duration": 1773,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Step 1: Navigate to the registration page\nawait navigateToRegistrationPage();\nconsole.log(\"Email:\", user.emailAddress);\nconsole.log(\"First Name:\", user.firstName);\n// Step 2: Fill in the registration form with user credentials\nawait driver.findElement(By.css('input[placeholder=\"First Name\"]')).sendKeys(user.firstName);\nawait driver.findElement(By.css('input[placeholder=\"Last Name\"]')).sendKeys(user.lastName);\nawait driver.findElement(By.css('input[placeholder=\"Email\"]')).sendKeys(user.emailAddress);\nawait driver.findElement(By.css('input[placeholder=\"Password\"]')).sendKeys(user.password);\nawait driver.findElement(By.css('input[placeholder=\"Re-enter Password\"]')).sendKeys(user.confirmPassword);\n// Step 3: Submit the registration form\nconst registerButton = await driver.findElement(By.css('button[type=\"submit\"]'));\nawait registerButton.click();\nawait driver.sleep(1000);\n// Step 4: Verify the user is redirected to the user profile page\nconst currentUrl = await driver.getCurrentUrl();\nassert.strictEqual(currentUrl, DASHBOARD_URL, \"After successful registration, the user should be redirected to the user profile page.\");",
              "err": {},
              "uuid": "6f7f2faa-63d9-4925-9e42-802ed2cd7dcf",
              "parentUUID": "07ff9a83-4980-41c3-aa5d-6f3d21116298",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84fdde55-fe20-431f-908c-25313d5981c6",
            "013bf498-b972-42c3-baff-190b95f595ec",
            "3095e7bb-c1d0-41d7-89fc-da94813da7df",
            "b4b516bb-e7de-4d92-bd3a-12dedee65f54",
            "01ef1799-e5ba-47ea-ae63-bae827f90423",
            "4517fdc9-d8c0-46f8-a4ff-0cccf83532c6",
            "6f7f2faa-63d9-4925-9e42-802ed2cd7dcf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13425,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}